name: obs-studio
summary: OBS - Free and open source software for live streaming and screen recording
description: |
  OBS Studio is software designed for capturing, compositing, encoding, recording, 
  and streaming video content, efficiently.
  It's distributed under the GNU General Public License v2 - see the accompanying COPYING file for more details.
adopt-info: obs

base: core18
grade: stable
confinement: strict

architectures:
  - build-on: amd64
  - build-on: i386

# We should migrate to using the official folder for obs-studio config
#plugs:
#  obs-config-dir:
#    interface: personal-files
#    write: [$HOME/.config/obs-studio]

plugs:
  gtk-3-themes:
    interface: content
    target: $SNAP/data-dir/themes
    default-provider: gtk-common-themes
  icon-themes:
    interface: content
    target: $SNAP/data-dir/icons
    default-provider: gtk-common-themes
  sound-themes:
    interface: content
    target: $SNAP/data-dir/sounds
    default-provider: gtk-common-themes

layout:
  /usr/lib/obs-plugins:
    bind: $SNAP/usr/lib/obs-plugins
  /usr/lib/obs-scripting:
    bind: $SNAP/usr/lib/obs-scripting
  /usr/local/lib:
    bind: $SNAP/usr/local/lib
  /usr/share/alsa:
    bind: $SNAP/usr/share/alsa
  /usr/share/obs:
    bind: $SNAP/usr/share/obs
  /usr/share/X11:
    bind: $SNAP/usr/share/X11

apps:
  obs-studio:
    command: desktop-launch $SNAP/bin/launcher
    command-chain:
      - sem-open-preload-launch
    environment:
      # Tell libGL where to find the drivers
      LIBGL_DRIVERS_PATH: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/dri
      LIBVA_DRIVERS_PATH: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/dri
      # Mesa Libs for OpenGL support
      # Workaround in snapd for proprietary nVidia drivers mounts the drivers in
      # /var/lib/snapd/lib/gl that needs to be in LD_LIBRARY_PATH
      # Without that OpenGL using apps do not work with the nVidia drivers.
      # Ref.: https://bugs.launchpad.net/snappy/+bug/1588192
      LD_LIBRARY_PATH: $LD_LIBRARY_PATH:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/mesa:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/mesa-egl:$LIBGL_DRIVERS_PATH:/var/lib/snapd/lib/gl:$SNAP_USER_DATA/.config/obs-studio/plugins
    plugs:
      - browser-support
      - network
      - network-bind
      - desktop
      - desktop-legacy
      - opengl
      - pulseaudio
      - audio-playback
      - audio-record
      - x11
      - unity7
      - camera
      - home
      - removable-media
      - wayland
      - jack1
      - joystick

parts:
  sem-open-preload:
    source: https://github.com/sergiusens/sem-open-preload.git
    plugin: make
    make-parameters:
      - CC=gcc-8
      - CXX=g++-8
    build-packages:
      - gcc-8
      - g++-8

  desktop-qt5:
    build-packages:
      - gcc-8
      - g++-8
      - qtbase5-dev
      - dpkg-dev
    plugin: make
    make-parameters:
      - CC=gcc-8
      - CXX=g++-8
      - FLAVOR=qt5
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-subdir: qt
    stage-packages:
      - libqt5gui5
      - libqt5svg5
      - qtwayland5
      - shared-mime-info
      - xdg-user-dirs

  nv-codec-headers:
    plugin: make
    make-parameters:
      - CC=gcc-8
      - CXX=g++-8
      - PREFIX=/usr
    source: https://github.com/FFmpeg/nv-codec-headers.git
    source-tag: 'n9.1.23.1'
    build-packages:
      - gcc-8
      - g++-8
      - pkg-config

  ffmpeg:
    after: [ nv-codec-headers ]
    plugin: autotools
    source: https://github.com/FFmpeg/FFmpeg.git
    source-branch: release/4.2
    source-depth: 1
    build-packages:
      - gcc-8
      - g++-8
      - libass-dev
      - libbz2-dev
      - libdrm-dev
      - libfdk-aac-dev
      - libgnutls28-dev
      - liblzma-dev
      - libmp3lame-dev
      - libomxil-bellagio-dev
      - libopenal-dev
      - libopencore-amrnb-dev
      - libopencore-amrwb-dev
      - libopus-dev
      - libpulse-dev
      - librsvg2-dev
      - libsctp-dev
      - libsdl2-dev
      - libspeex-dev
      - libtheora-dev
      - libtwolame-dev
      - libva-dev
      - libv4l-dev
      - libvdpau-dev
      - libvorbis-dev
      - libvpx-dev
      - libx264-dev
      - libx265-dev
      - libxcb-shape0-dev
      - libxcb-shm0-dev
      - libxcb-xfixes0-dev
      - libxv-dev
      - libxvidcore-dev
      - ocl-icd-opencl-dev
      - opencl-headers
      - pkg-config
      - yasm
      - on amd64:
        - libcrystalhd-dev
      - on i386:
        - libcrystalhd-dev
    stage-packages:
      - libass9
      - libdrm2
      - libfdk-aac1
      - libgnutls30
      - libmp3lame0
      - libopenal1
      - libopencore-amrnb0
      - libopencore-amrwb0
      - libopus0
      - libpulse0
      - librsvg2-2
      - libsdl2-2.0-0
      - libspeex1
      - libtheora0
      - libtwolame0
      - libv4l-0
      - libv4l2rds0
      - libva-drm2
      - libva-glx2
      - libva-wayland2
      - libvdpau-va-gl1
      - libvorbis0a
      - libvorbisenc2
      - libvpx5
      - libx264-152
      - libx265-146
      - libx11-6
      - libxau6
      - libxcb-shape0
      - libxcb-shm0
      - libxcb-xfixes0
      - libxcb1
      - libxdmcp6
      - libxext6
      - libxv1
      - libxvidcore4
      - mesa-va-drivers
      - mesa-vdpau-drivers
      - ocl-icd-libopencl1
      - on amd64:
        - i965-va-driver
        - libcrystalhd3
      - on i386:
        - i965-va-driver
        - libcrystalhd3
    configflags:
      - --cc=gcc-8
      - --cxx=g++-8
      - --prefix=/usr
      - --disable-debug
      - --disable-doc
      - --disable-programs
      - --disable-static
      - --enable-avisynth
      - --enable-cuda
      - --enable-cuvid
      - --enable-libdrm
      - --enable-gnutls
      - --enable-gpl
      - --enable-libass
      - --enable-libfdk-aac
      - --enable-libfontconfig
      - --enable-libfreetype
      - --enable-libmp3lame
      - --enable-libopencore_amrnb
      - --enable-libopencore_amrwb
      - --enable-libopus
      - --enable-libpulse
      - --enable-sdl2
      - --enable-libspeex
      - --enable-libtheora
      - --enable-libtwolame
      - --enable-libv4l2
      - --enable-libvorbis
      - --enable-libvpx
      - --enable-libx264
      - --enable-libxcb
      - --enable-libxvid
      - --enable-nonfree
      - --enable-nvenc
      - --enable-omx
      - --enable-openal
      - --enable-opencl
      - --enable-runtime-cpudetect
      - --enable-librsvg
      - --enable-shared
      - --enable-vaapi
      - --enable-vdpau
      - --enable-version3
      - --enable-xlib
    prime:
      - usr/bin
      - usr/lib
      - usr/lib/pkgconfig
      - usr/include
      - -usr/share/doc
      - -usr/share/man

  libuiohook:
    plugin: autotools
    configflags:
      - CC=gcc-8
      - CCX=g++-8
      - --prefix=/usr
    source: https://github.com/kwhat/libuiohook.git
    source-tag: '1.0.3'
    build-packages:
      - gcc-8
      - g++-8
      - libxinerama-dev
      - libxt-dev
      - libxtst-dev
      - pkg-config
    stage-packages:
      - libxinerama1
      - libxt6
      - libxtst6

  netlib:
    plugin: cmake
    source: https://github.com/univrsal/netlib.git
    source-tag: 'v0.2'
    build-packages:
      - gcc-8
      - g++-8
    override-build: |
      cmake \
        -DCMAKE_CXX_COMPILER=g++-8 \
        -DCMAKE_C_COMPILER=gcc-8 \
        -DCMAKE_INSTALL_PREFIX=/usr \
        ${SNAPCRAFT_PART_SRC}
      make
    organize:
      libnetlib.so: usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libnetlib.so
      netlib_client: usr/bin/netlib_client
      netlib_server: usr/bin/netlib_server

  obs:
    plugin: cmake
    after: 
      - desktop-qt5
      - ffmpeg
      # Required for input-overlay
      - libuiohook
      - netlib
    configflags:
      - -DCMAKE_C_COMPILER=gcc-8
      - -DCMAKE_CXX_COMPILER=g++-8
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DUNIX_STRUCTURE=1
      - -DDISABLE_UPDATE_MODULE=TRUE
      - -DBUILD_BROWSER=ON
      - -DCEF_ROOT_DIR=$SNAPCRAFT_PART_SRC/cef_binary
    source: https://github.com/obsproject/obs-studio.git
    override-pull: |
      snapcraftctl pull
      set -x

      # Checkout that latest stable version
      last_committed_tag="$(git -C ../src tag | grep -v rc| sort -V | tail -n 1)"
      last_released_tag="$(snap info obs-studio | awk '$1 == "beta:" { print $2 }')"
      # If the latest tag from the upstream project has not been released to
      # beta, build that tag instead of master.
      if [ "${last_committed_tag}" != "${last_released_tag}" ]; then
        git fetch
        git checkout "${last_committed_tag}"
        cd ../src
        git checkout "${last_committed_tag}"
      fi
      snapcraftctl set-version "$(git describe --tags)"

      # Get the cef_binary
      ARCHITECTURE=$(dpkg --print-architecture)
      if [ "${ARCHITECTURE}" = "amd64" ]; then
        SUFFIX="linux64"
      elif [ "${ARCHITECTURE}" = "i386" ]; then
        SUFFIX="linux32"
      else
        SUFFIX=""
      fi
      if [ -n "${SUFFIX}" ]; then
        wget --quiet "https://cdn-fastly.obsproject.com/downloads/cef_binary_3770_${SUFFIX}.tar.bz2" -O $SNAPCRAFT_PART_SRC/cef.tar.bz2
        mkdir -p ${SNAPCRAFT_PART_SRC}/cef_binary
        tar jxvf ${SNAPCRAFT_PART_SRC}/cef.tar.bz2 -C ${SNAPCRAFT_PART_SRC}/cef_binary --strip-components=1
        rm ${SNAPCRAFT_PART_SRC}/cef.tar.bz2
      fi

      # SceneSwitcher - https://github.com/WarmUpTill/SceneSwitcher
      cd ${SNAPCRAFT_PART_SRC}/UI/frontend-plugins/
      git clone --recursive https://github.com/WarmUpTill/SceneSwitcher.git --branch 1.5
      echo "add_subdirectory(SceneSwitcher)" >> CMakeLists.txt

      # Source Switcher - https://github.com/exeldro/obs-source-switcher
      cd ${SNAPCRAFT_PART_SRC}/plugins/
      git clone --recursive https://github.com/exeldro/obs-source-switcher.git source-switcher
      echo "add_subdirectory(source-switcher)" >> CMakeLists.txt

      # Move Transition - https://github.com/exeldro/obs-move-transition
      cd ${SNAPCRAFT_PART_SRC}/plugins/
      git clone --recursive https://github.com/exeldro/obs-move-transition.git move-transition --branch 1.1.3
      echo "add_subdirectory(move-transition)" >> CMakeLists.txt

      # Freeze Filter - https://github.com/exeldro/obs-freeze-filter
      cd ${SNAPCRAFT_PART_SRC}/plugins/
      git clone --recursive https://github.com/exeldro/obs-freeze-filter.git freeze-filter --branch 0.0.2
      echo "add_subdirectory(freeze-filter)" >> CMakeLists.txt

      # Replay Source - https://github.com/exeldro/obs-replay-source
      cd ${SNAPCRAFT_PART_SRC}/plugins/
      git clone --recursive https://github.com/exeldro/obs-replay-source.git replay-source --branch 1.5.4
      echo "add_subdirectory(replay-source)" >> CMakeLists.txt
      cd replay-source
      sed -i 's/install_obs_plugin_with_data(replay-source data)/install_obs_plugin(replay-source)/' CMakeLists.txt

      # Websocket - https://github.com/Palakis/obs-websocket
      cd ${SNAPCRAFT_PART_SRC}/plugins/
      git clone --recursive https://github.com/Palakis/obs-websocket.git --branch 4.7.0
      echo "add_subdirectory(obs-websocket)" >> CMakeLists.txt

      # Spectralizer - https://github.com/univrsal/spectralizer
      cd ${SNAPCRAFT_PART_SRC}/plugins/
      git clone --recursive https://github.com/univrsal/spectralizer.git --branch v1.2
      echo "add_subdirectory(spectralizer)" >> CMakeLists.txt

      # Scrab - https://github.com/univrsal/scrab
      cd ${SNAPCRAFT_PART_SRC}/plugins/
      git clone --recursive https://github.com/univrsal/scrab.git --branch v1.1
      echo "add_subdirectory(scrab)" >> CMakeLists.txt

      # StreamFX - https://github.com/Xaymar/obs-StreamFX
      cd ${SNAPCRAFT_PART_SRC}/UI/frontend-plugins/
      git submodule add https://github.com/Xaymar/obs-StreamFX.git streamfx --branch 0.8.0b3
      echo "add_subdirectory(streamfx)" >> CMakeLists.txt

      # Input Overlay - https://github.com/univrsal/input-overlay
      cd ${SNAPCRAFT_PART_SRC}/plugins/
      git clone --recursive https://github.com/univrsal/input-overlay.git --branch v4.8
      echo "add_subdirectory(input-overlay)" >> CMakeLists.txt

    override-build: |
      # obs-frontend-api.h is required for plugins to build
      mkdir -p ${SNAPCRAFT_STAGE}/usr/include/obs || true
      cp -v ${SNAPCRAFT_PART_SRC}/UI/obs-frontend-api/*.h ${SNAPCRAFT_STAGE}/usr/include/obs/
      # ObsPluginHelpers.cmake
      mkdir -p ${SNAPCRAFT_STAGE}/usr/include/cmake/external || true
      cp -v ${SNAPCRAFT_PART_SRC}/cmake/external/*.cmake ${SNAPCRAFT_STAGE}/usr/include/cmake/external/
      snapcraftctl build
      # Fix some missing theme assets
      cp ${SNAPCRAFT_PART_SRC}/UI/data/themes/Dark/close.svg ${SNAPCRAFT_PART_INSTALL}/usr/share/obs/obs-studio/themes/Dark/Close.svg
      cp ${SNAPCRAFT_PART_SRC}/UI/data/themes/Dark/popout.svg ${SNAPCRAFT_PART_INSTALL}/usr/share/obs/obs-studio/themes/Dark/Popout.svg

    build-packages:
      # Based on https://obsproject.com/wiki/install-instructions#debian-based-build-directions
      - bzip2
      - gcc-8
      - g++-8
      - wget
      - build-essential
      - libmbedtls-dev
      - libasound2-dev
      #- libavcodec-dev       # comes via the FFmpeg part
      #- libavdevice-dev      # comes via the FFmpeg part
      #- libavfilter-dev      # comes via the FFmpeg part
      #- libavformat-dev      # comes via the FFmpeg part
      #- libavutil-dev        # comes via the FFmpeg part
      - libcurl4-openssl-dev
      - libfdk-aac-dev
      - libfontconfig-dev
      - libfreetype6-dev
      - libgl1-mesa-dev
      - libjack-dev           # not libjack-jackd2-dev as upstream suggests
      - libjansson-dev
      - libluajit-5.1-dev
      - libpulse-dev
      - libqt5x11extras5-dev
      - libspeexdsp-dev
      #- libswresample-dev    # comes via the FFmpeg part
      #- libswscale-dev       # comes via the FFmpeg part
      - libudev-dev
      - libv4l-dev
      - libvlc-dev
      - libx11-dev
      - libx264-dev
      - libxcb-xinput-dev
      - libxcb-shm0-dev
      - libxcb-xinerama0-dev
      - libxcomposite-dev
      - libxinerama-dev
      - pkg-config
      - python3-dev
      - qtbase5-dev
      - libqt5svg5-dev
      - swig
      - libxcb-randr0-dev
      - libxcb-xfixes0-dev
      - libx11-xcb-dev
      - libxcb1-dev
      # Required by cef_binary_3770
      - libnss3-dev
      - libnspr4-dev
      - libxtst-dev
      # Required by obs-websocket
      - libasio-dev
      - libwebsocketpp-dev
      # Required by Spectralizer
      - libfftw3-dev
      # Required by StreamFX
      #- libqt5x11extras5-dev
      - ninja-build
    stage-packages:
      # Based on https://obsproject.com/wiki/install-instructions#debian-based-build-directions
      - libmbedcrypto1
      - libmbedtls10
      - libmbedx509-0
      - libasound2
      - libcurl4
      - libfdk-aac1
      - libfreetype6
      - libgl1
      - libglvnd0
      - jackd1                # not libjack-jackd2-0 as upstream suggests
      - libjansson4
      - libluajit-5.1-2
      - libpulse0
      - libqt5x11extras5
      - libspeexdsp1
      - libv4l-0
      - libv4lconvert0
      - libv4l2rds0
      - libvlc5
      - libx11-6
      - libx264-152
      - libxcb-shm0
      - libxcb-xinerama0
      - libxcomposite1
      - libxinerama1
      - libpython3.6
      - libqt5core5a
      - libqt5svg5
      - libqt5xml5
      - libxcb-xinput0
      - libxcb-randr0
      - libxcb-xfixes0
      - libx11-xcb1
      - libxcb1
      # Required by cef_binary_3770
      - libatk-bridge2.0-0
      - libatspi2.0-0
      - libnss3
      - libnspr4
      - libxtst6
      # Required by Spectralizer
      - libfftw3-3
      # Required by Input Overlay
      - libxt6

  obs-v4l2sink:
    plugin: cmake
    after: [ obs ]
    #source: https://github.com/CatxFish/obs-v4l2sink.git
    # Using my fork for now as it rolls up various fixes missing from upstream.
    source: https://github.com/flexiondotorg/obs-v4l2sink.git
    configflags: ["-DCMAKE_INSTALL_PREFIX=/usr", "-DLIBOBS_LIB=$SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET", "-DCMAKE_CXX_COMPILER=g++-8", "-DCMAKE_C_COMPILER=gcc-8"]
    override-build: |
      # The build system for this plugin is slightly broken.
      # The initial cmake to makes the libs discoverable by `snapcraftctl build`
      cmake -DCMAKE_INSTALL_PREFIX=/usr -DLIBOBS_LIB=${SNAPCRAFT_STAGE}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET} -DCMAKE_CXX_COMPILER=g++-8 -DCMAKE_C_COMPILER=gcc-8 ${SNAPCRAFT_PART_SRC} 2>/dev/null || true
      snapcraftctl build
    override-prime: |
      if echo __SIZEOF_POINTER__ | cpp -E - - | grep '^8$' >/dev/null; then
        cp ${SNAPCRAFT_PART_INSTALL}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/obs-plugins/v4l2sink.so ${SNAPCRAFT_PRIME}/usr/obs-plugins/64bit/
      else
        cp ${SNAPCRAFT_PART_INSTALL}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/obs-plugins/v4l2sink.so ${SNAPCRAFT_PRIME}/usr/obs-plugins/32bit/
      fi
      mkdir -p ${SNAPCRAFT_PRIME}/usr/data/obs-plugins/v4l2sink/locale
      mv -v ${SNAPCRAFT_PART_INSTALL}/usr/share/obs/obs-plugins/v4l2sink/locale/*.ini ${SNAPCRAFT_PRIME}/usr/data/obs-plugins/v4l2sink/locale/

  obs-transition-matrix:
    plugin: cmake
    after: [ obs ]
    source: https://github.com/admshao/obs-transition-matrix.git
    source-tag: 'v1.0'
    configflags: ["-DCMAKE_INSTALL_PREFIX=/usr", "-DLIBOBS_LIB=$SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET", "-DCMAKE_CXX_COMPILER=g++-8", "-DCMAKE_C_COMPILER=gcc-8"]
    override-prime: |
      if echo __SIZEOF_POINTER__ | cpp -E - - | grep '^8$' >/dev/null; then
        cp ${SNAPCRAFT_PART_INSTALL}/usr/lib/obs-plugins/obs-transition-matrix.so ${SNAPCRAFT_PRIME}/usr/obs-plugins/64bit/
      else
        cp ${SNAPCRAFT_PART_INSTALL}/usr/lib/obs-plugins/obs-transition-matrix.so ${SNAPCRAFT_PRIME}/usr/obs-plugins/32bit/
      fi
      mkdir -p ${SNAPCRAFT_PRIME}/usr/data/obs-plugins/obs-transition-matrix/locale
      mv -v ${SNAPCRAFT_PART_INSTALL}/usr/share/obs/obs-plugins/obs-transition-matrix/locale/*.ini ${SNAPCRAFT_PRIME}/usr/data/obs-plugins/obs-transition-matrix/locale/

  obs-dvd-screensaver:
    plugin: cmake
    after: [ obs ]
    source: https://github.com/univrsal/dvds3.git
    source-tag: 'independent-build'
    configflags: ["-DCMAKE_INSTALL_PREFIX=/usr", "-DLIBOBS_LIB=$SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET", "-DCMAKE_CXX_COMPILER=g++-8", "-DCMAKE_C_COMPILER=gcc-8"]
    override-prime: |
      if echo __SIZEOF_POINTER__ | cpp -E - - | grep '^8$' >/dev/null; then
        cp ${SNAPCRAFT_PART_INSTALL}/root/.config/obs-studio/plugins/dvd-screensaver/bin/64bit/dvd-screensaver.so ${SNAPCRAFT_PRIME}/usr/obs-plugins/64bit/
      else
        cp ${SNAPCRAFT_PART_INSTALL}/root/.config/obs-studio/plugins/dvd-screensaver/bin/32bit/dvd-screensaver.so ${SNAPCRAFT_PRIME}/usr/obs-plugins/32bit/
      fi
      mkdir -p ${SNAPCRAFT_PRIME}/usr/data/obs-plugins/dvd-screensaver/locale
      mv -v ${SNAPCRAFT_PART_INSTALL}/root/.config/obs-studio/plugins/dvd-screensaver/data/locale/*.ini ${SNAPCRAFT_PRIME}/usr/data/obs-plugins/dvd-screensaver/locale/ || true
      cp -v ${SNAPCRAFT_PART_SRC}/data/dvd.png ${SNAPCRAFT_PRIME}/usr/data/obs-plugins/dvd-screensaver/

  obs-vintage-filter:
    plugin: cmake
    after: [ obs ]
    source: https://github.com/cg2121/obs-vintage-filter.git
    source-tag: 'v0.1'
    configflags: ["-DCMAKE_INSTALL_PREFIX=/usr", "-DLIBOBS_LIB=$SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET", "-DCMAKE_CXX_COMPILER=g++-8", "-DCMAKE_C_COMPILER=gcc-8"]
    override-prime: |
      if echo __SIZEOF_POINTER__ | cpp -E - - | grep '^8$' >/dev/null; then
        cp ${SNAPCRAFT_PART_INSTALL}/usr/lib/obs-plugins/obs-vintage-filter.so ${SNAPCRAFT_PRIME}/usr/obs-plugins/64bit/
      else
        cp ${SNAPCRAFT_PART_INSTALL}/usr/lib/obs-plugins/obs-vintage-filter.so ${SNAPCRAFT_PRIME}/usr/obs-plugins/32bit/
      fi
      mkdir -p ${SNAPCRAFT_PRIME}/usr/data/obs-plugins/obs-vintage-filter/locale
      mv -v ${SNAPCRAFT_PART_INSTALL}/usr/share/obs/obs-plugins/obs-vintage-filter/*.effect ${SNAPCRAFT_PRIME}/usr/data/obs-plugins/obs-vintage-filter/
      mv -v ${SNAPCRAFT_PART_INSTALL}/usr/share/obs/obs-plugins/obs-vintage-filter/locale/*.ini ${SNAPCRAFT_PRIME}/usr/data/obs-plugins/obs-vintage-filter/locale/

  launcher:
    after:  [ obs ]
    plugin: dump
    source: snap/local/
    organize:
      'launcher': bin/

  cleanup:
    after: [ launcher ]
    plugin: nil
    override-prime: |
      set -eux
      for CRUFT in usr/include usr/share/bug usr/share/lintian usr/share/man; do
        rm -rf ${SNAPCRAFT_PRIME}/${CRUFT}
      done
      find ${SNAPCRAFT_PRIME}/usr/share/doc/ -type f -not -name 'copyright' -delete
      rm -v ${SNAPCRAFT_PRIME}/usr/share/doc/*/changelog.Debian.gz
      find ${SNAPCRAFT_PRIME}/usr/share -type d -empty -delete